{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext'; // To get access token\n\nconst useUserProfile = () => {\n  _s();\n  const {\n    authData\n  } = useAuth(); // Get the access token from the AuthContext\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (!(authData !== null && authData !== void 0 && authData.accessToken)) return; // Ensure token is available\n\n      try {\n        const response = await fetch('https://app.spiralreports.com/api/users/profile', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${authData.accessToken}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setUserData(data.data); // Set user data\n        } else {\n          setError(data.message); // Set error message if the request fails\n        }\n      } catch (error) {\n        setError('An error occurred while fetching user data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserProfile();\n  }, [authData === null || authData === void 0 ? void 0 : authData.accessToken]); // Re-run the effect when accessToken changes\n\n  return {\n    userData,\n    loading,\n    error\n  };\n};\n_s(useUserProfile, \"H342/xbNE2dZsEuqCHd7b0RdGVU=\", false, function () {\n  return [useAuth];\n});\nexport default useUserProfile;","map":{"version":3,"names":["useState","useEffect","useAuth","useUserProfile","_s","authData","userData","setUserData","loading","setLoading","error","setError","fetchUserProfile","accessToken","response","fetch","method","headers","Authorization","data","json","ok","message"],"sources":["/Users/akmalkhan/chromablend/Spiralreports1/src/hooks/useUserProfile.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext'; // To get access token\n\nconst useUserProfile = () => {\n  const { authData } = useAuth(); // Get the access token from the AuthContext\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (!authData?.accessToken) return; // Ensure token is available\n\n      try {\n        const response = await fetch('https://app.spiralreports.com/api/users/profile', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${authData.accessToken}`,\n          },\n        });\n        \n        const data = await response.json();\n        \n        if (response.ok) {\n          setUserData(data.data); // Set user data\n        } else {\n          setError(data.message); // Set error message if the request fails\n        }\n      } catch (error) {\n        setError('An error occurred while fetching user data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserProfile();\n  }, [authData?.accessToken]); // Re-run the effect when accessToken changes\n\n  return { userData, loading, error };\n};\n\nexport default useUserProfile;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,eAAe,CAAC,CAAC;;AAEzC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAS,CAAC,GAAGH,OAAO,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI,EAACP,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEQ,WAAW,GAAE,OAAO,CAAC;;MAEpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;UAC9EC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUb,QAAQ,CAACQ,WAAW;UAC/C;QACF,CAAC,CAAC;QAEF,MAAMM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAElC,IAAIN,QAAQ,CAACO,EAAE,EAAE;UACfd,WAAW,CAACY,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,MAAM;UACLR,QAAQ,CAACQ,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdC,QAAQ,CAAC,4CAA4C,CAAC;MACxD,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEQ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAE7B,OAAO;IAAEP,QAAQ;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACrC,CAAC;AAACN,EAAA,CApCID,cAAc;EAAA,QACGD,OAAO;AAAA;AAqC9B,eAAeC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}