{"ast":null,"code":"var _jsxFileName = \"/Users/akmalkhan/chromablend/Spiralreports1/src/components/ForgotPasswordModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../components/ui/Button'; // Assuming you have this Button component or use Tailwind for custom styles\nimport { Input } from '../components/ui/Input'; // Same as above for Input\nimport useForgotPassword from '../hooks/useForgotPassword'; // Import the custom hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const {\n    isSubmitting,\n    errorMessage,\n    successMessage,\n    sendForgotPasswordRequest\n  } = useForgotPassword();\n  const [isSuccess, setIsSuccess] = useState(false); // Track success status\n\n  // Close modal automatically after success\n  useEffect(() => {\n    if (isSuccess) {\n      // Delay the modal close by 2 seconds to show success message\n      const timer = setTimeout(() => {\n        onClose(); // Close the modal after success\n      }, 2000); // 2 seconds delay for success message visibility\n      return () => clearTimeout(timer); // Clean up timeout if component unmounts or state changes\n    }\n  }, [isSuccess, onClose]);\n  if (!isOpen) return null; // Don't render the modal if it's not open\n\n  const handleSubmit = async () => {\n    if (!email) {\n      alert('Please enter a valid email address');\n      return;\n    }\n\n    // Reset success/error states before making the API call\n    setIsSuccess(false);\n\n    // Call the API to send the reset link\n    const response = await sendForgotPasswordRequest(email);\n    if (response && response.statusCode === 200) {\n      // If success, show success message and close the modal after delay\n      setIsSuccess(true); // Set success status\n    } else {\n      // Handle failure or display error\n      console.log(\"Error occurred during password reset:\", response);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg w-full sm:w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-gray-900 mb-4\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm mb-4\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }, this), isSuccess ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-sm mb-4\",\n        children: \"Password reset link has been sent!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : successMessage && !isSuccess ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 text-sm mb-4\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) // Show the success message from the API response\n      : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Enter your email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"you@example.com\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 transition-colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          onClick: onClose // Close the modal on cancel\n          ,\n          className: \"px-4 py-2 text-gray-700 text-sm font-medium rounded-lg hover:bg-gray-200 transition-colors\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          onClick: handleSubmit,\n          className: \"px-4 py-2 bg-red-500 text-white text-sm font-medium rounded-lg hover:bg-red-600 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Sending...' : 'Send Reset Link'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPasswordModal, \"vpYKe9CT4eQKfuiIzlAWAkj+3d8=\", false, function () {\n  return [useForgotPassword];\n});\n_c = ForgotPasswordModal;\nexport default ForgotPasswordModal;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordModal\");","map":{"version":3,"names":["React","useState","useEffect","Button","Input","useForgotPassword","jsxDEV","_jsxDEV","ForgotPasswordModal","isOpen","onClose","_s","email","setEmail","isSubmitting","errorMessage","successMessage","sendForgotPasswordRequest","isSuccess","setIsSuccess","timer","setTimeout","clearTimeout","handleSubmit","alert","response","statusCode","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","placeholder","value","onChange","e","target","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/akmalkhan/chromablend/Spiralreports1/src/components/ForgotPasswordModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from '../components/ui/Button'; // Assuming you have this Button component or use Tailwind for custom styles\nimport { Input } from '../components/ui/Input'; // Same as above for Input\nimport useForgotPassword from '../hooks/useForgotPassword'; // Import the custom hook\n\nconst ForgotPasswordModal = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState('');\n  const { isSubmitting, errorMessage, successMessage, sendForgotPasswordRequest } = useForgotPassword();\n  const [isSuccess, setIsSuccess] = useState(false); // Track success status\n\n  // Close modal automatically after success\n  useEffect(() => {\n    if (isSuccess) {\n      // Delay the modal close by 2 seconds to show success message\n      const timer = setTimeout(() => {\n        onClose(); // Close the modal after success\n      }, 2000); // 2 seconds delay for success message visibility\n      return () => clearTimeout(timer); // Clean up timeout if component unmounts or state changes\n    }\n  }, [isSuccess, onClose]);\n\n  if (!isOpen) return null; // Don't render the modal if it's not open\n\n  const handleSubmit = async () => {\n    if (!email) {\n      alert('Please enter a valid email address');\n      return;\n    }\n\n    // Reset success/error states before making the API call\n    setIsSuccess(false);\n\n    // Call the API to send the reset link\n    const response = await sendForgotPasswordRequest(email);\n    \n    if (response && response.statusCode === 200) {\n      // If success, show success message and close the modal after delay\n      setIsSuccess(true); // Set success status\n    } else {\n      // Handle failure or display error\n      console.log(\"Error occurred during password reset:\", response);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\n      <div className=\"bg-white p-6 rounded-lg w-full sm:w-96\">\n        <h2 className=\"text-2xl font-semibold text-gray-900 mb-4\">Forgot Password</h2>\n\n        {/* Error or Success Message */}\n        {errorMessage && <p className=\"text-red-500 text-sm mb-4\">{errorMessage}</p>}\n        {isSuccess ? (\n          <p className=\"text-green-500 text-sm mb-4\">Password reset link has been sent!</p>\n        ) : successMessage && !isSuccess ? (\n          <p className=\"text-green-500 text-sm mb-4\">{successMessage}</p> // Show the success message from the API response\n        ) : null}\n\n        <div className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Enter your email address\n            </label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"you@example.com\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 transition-colors\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-6 flex justify-between\">\n          <Button\n            variant=\"outline\"\n            onClick={onClose} // Close the modal on cancel\n            className=\"px-4 py-2 text-gray-700 text-sm font-medium rounded-lg hover:bg-gray-200 transition-colors\"\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"ghost\"\n            onClick={handleSubmit}\n            className=\"px-4 py-2 bg-red-500 text-white text-sm font-medium rounded-lg hover:bg-red-600 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Sending...' : 'Send Reset Link'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPasswordModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}