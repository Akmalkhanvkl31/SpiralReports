{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../hooks/AuthContext';\nfunction useAssessmentDetails(id) {\n  _s();\n  const [assessmentDetails, setAssessmentDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    authData\n  } = useAuth();\n  const access_token = authData === null || authData === void 0 ? void 0 : authData.accessToken;\n  const [signupResponse, setSignupResponse] = useState(null);\n  console.log(signupResponse);\n  useEffect(() => {\n    if (!id) return;\n    setLoading(true);\n    setError(null);\n    const fetchAssessmentDetails = async () => {\n      try {\n        console.log('Fetching assessment details for id:', id);\n        const response = await fetch(`https://app.spiralreports.com/api/assessments/${id}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${access_token}`,\n            // Ensure valid access_token\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch: ${response.statusText}`);\n        }\n        const data = await response.json();\n        // console.log('API Response Data:', data);  // Debugging the actual response\n\n        if (data && data.data) {\n          setAssessmentDetails(data.data);\n        } else {\n          throw new Error('No assessment details found');\n        }\n      } catch (error) {\n        console.error('Error fetching assessment:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAssessmentDetails();\n  }, [id, access_token]); // Effect runs whenever `id` or `access_token` changes\n\n  return {\n    assessmentDetails,\n    loading,\n    error\n  };\n}\n_s(useAssessmentDetails, \"Gc7AGI4DE1wfm7HI27SupcaSbzQ=\", false, function () {\n  return [useAuth];\n});\nexport default useAssessmentDetails;","map":{"version":3,"names":["useState","useEffect","useAuth","useAssessmentDetails","id","_s","assessmentDetails","setAssessmentDetails","loading","setLoading","error","setError","authData","access_token","accessToken","signupResponse","setSignupResponse","console","log","fetchAssessmentDetails","response","fetch","method","headers","ok","Error","statusText","data","json","message"],"sources":["/Users/akmalkhan/chromablend/Spiralreports1/src/hooks/useAssessmentDetails.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from '../hooks/AuthContext';\n\nfunction useAssessmentDetails(id) {\n  const [assessmentDetails, setAssessmentDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { authData } = useAuth();\n  const access_token = authData?.accessToken;\n  const [signupResponse, setSignupResponse] = useState(null);\n  console.log(signupResponse);\n  \n  useEffect(() => {\n    if (!id) return;\n\n    setLoading(true);\n    setError(null);\n\n    const fetchAssessmentDetails = async () => {\n      try {\n        console.log('Fetching assessment details for id:', id);\n        const response = await fetch(`https://app.spiralreports.com/api/assessments/${id}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${access_token}`,  // Ensure valid access_token\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        // console.log('API Response Data:', data);  // Debugging the actual response\n\n        if (data && data.data) {\n          setAssessmentDetails(data.data);\n        } else {\n          throw new Error('No assessment details found');\n        }\n\n      } catch (error) {\n        console.error('Error fetching assessment:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAssessmentDetails();\n  }, [id, access_token]);  // Effect runs whenever `id` or `access_token` changes\n\n  return { assessmentDetails, loading, error };\n}\n\nexport default useAssessmentDetails;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,sBAAsB;AAE9C,SAASC,oBAAoBA,CAACC,EAAE,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEY;EAAS,CAAC,GAAGV,OAAO,CAAC,CAAC;EAC9B,MAAMW,YAAY,GAAGD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,WAAW;EAC1C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC1DiB,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;EAE3Bd,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,EAAE,EAAE;IAETK,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMQ,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACFF,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEd,EAAE,CAAC;QACtD,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiDjB,EAAE,EAAE,EAAE;UAClFkB,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUV,YAAY,EAAE;YAAG;YAC5C,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACO,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoBL,QAAQ,CAACM,UAAU,EAAE,CAAC;QAC5D;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC;;QAEA,IAAID,IAAI,IAAIA,IAAI,CAACA,IAAI,EAAE;UACrBpB,oBAAoB,CAACoB,IAAI,CAACA,IAAI,CAAC;QACjC,CAAC,MAAM;UACL,MAAM,IAAIF,KAAK,CAAC,6BAA6B,CAAC;QAChD;MAEF,CAAC,CAAC,OAAOf,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDC,QAAQ,CAACD,KAAK,CAACmB,OAAO,CAAC;MACzB,CAAC,SAAS;QACRpB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDU,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACf,EAAE,EAAES,YAAY,CAAC,CAAC,CAAC,CAAE;;EAEzB,OAAO;IAAEP,iBAAiB;IAAEE,OAAO;IAAEE;EAAM,CAAC;AAC9C;AAACL,EAAA,CAnDQF,oBAAoB;EAAA,QAIND,OAAO;AAAA;AAiD9B,eAAeC,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}