{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../hooks/AuthContext';\n\n/**\n * Custom hook for submitting the assessment data along with selected tools.\n * @returns {Object} - Provides submit function, loading, error, and success states.\n */\nconst useSubmitAssessment = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const {\n    authData\n  } = useAuth();\n  const access_token = authData === null || authData === void 0 ? void 0 : authData.accessToken;\n  const submitAssessment = async (assessmentData, toolsUsed) => {\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    const API_URL = \"https://app.spiralreports.com/api/evaluations/new\"; // Change to the actual API URL\n\n    try {\n      // Prepare request body\n      const requestBody = {\n        assessmentId: assessmentData.assessmentId,\n        receipient: assessmentData.receipient || \"SELF\",\n        name: assessmentData.name || \"string\",\n        compliance: assessmentData.compliance || \"string\",\n        response: assessmentData.questions.map(question => ({\n          question: question.question,\n          considerScore: question.considerScore || true,\n          // Assuming considerScore is optional\n          options: question.options.map(option => ({\n            text: option.text,\n            level: option.level\n          }))\n        })),\n        toolsUsed: toolsUsed // Send the tools used\n      };\n\n      // API call\n      const response = await axios.post(API_URL, requestBody, {\n        headers: {\n          'Authorization': `Bearer ${access_token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setSuccess(true);\n      setLoading(false);\n      return response.data; // Return the data received from the API (for further processing)\n    } catch (err) {\n      setError('Error submitting the assessment. Please try again.');\n      setLoading(false);\n      throw err; // Rethrow error to allow handling in the component\n    }\n  };\n  return {\n    submitAssessment,\n    loading,\n    error,\n    success\n  };\n};\n_s(useSubmitAssessment, \"9uDMEf8+a5YF4IO2FxsxNRaByek=\", false, function () {\n  return [useAuth];\n});\nexport default useSubmitAssessment;","map":{"version":3,"names":["useState","axios","useAuth","useSubmitAssessment","_s","loading","setLoading","error","setError","success","setSuccess","authData","access_token","accessToken","submitAssessment","assessmentData","toolsUsed","API_URL","requestBody","assessmentId","receipient","name","compliance","response","questions","map","question","considerScore","options","option","text","level","post","headers","data","err"],"sources":["/Users/akmalkhan/chromablend/Spiralreports1/src/hooks/useSubmitAssessment.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../hooks/AuthContext';\n\n/**\n * Custom hook for submitting the assessment data along with selected tools.\n * @returns {Object} - Provides submit function, loading, error, and success states.\n */\nconst useSubmitAssessment = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const { authData } = useAuth();\n  const access_token = authData?.accessToken;\n  const submitAssessment = async (assessmentData, toolsUsed) => {\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n\n    const API_URL = \"https://app.spiralreports.com/api/evaluations/new\";  // Change to the actual API URL\n\n    try {\n      // Prepare request body\n      const requestBody = {\n        assessmentId: assessmentData.assessmentId,\n        receipient: assessmentData.receipient||\"SELF\",\n        name: assessmentData.name || \"string\",\n        compliance: assessmentData.compliance || \"string\",\n        response: assessmentData.questions.map((question) => ({\n          question: question.question,\n          considerScore: question.considerScore || true,  // Assuming considerScore is optional\n          options: question.options.map((option) => ({\n            text: option.text,\n            level: option.level,\n          })),\n        })),\n        toolsUsed: toolsUsed,  // Send the tools used\n      };\n\n      // API call\n      const response = await axios.post(API_URL, requestBody, {\n        headers: {\n          'Authorization': `Bearer ${access_token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      setSuccess(true);\n      setLoading(false);\n      return response.data;  // Return the data received from the API (for further processing)\n    } catch (err) {\n      setError('Error submitting the assessment. Please try again.');\n      setLoading(false);\n      throw err;  // Rethrow error to allow handling in the component\n    }\n  };\n\n  return {\n    submitAssessment,\n    loading,\n    error,\n    success,\n  };\n};\n\nexport default useSubmitAssessment;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,sBAAsB;;AAE9C;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEW;EAAS,CAAC,GAAGT,OAAO,CAAC,CAAC;EAC9B,MAAMU,YAAY,GAAGD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,WAAW;EAC1C,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,cAAc,EAAEC,SAAS,KAAK;IAC5DV,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdE,UAAU,CAAC,KAAK,CAAC;IAEjB,MAAMO,OAAO,GAAG,mDAAmD,CAAC,CAAE;;IAEtE,IAAI;MACF;MACA,MAAMC,WAAW,GAAG;QAClBC,YAAY,EAAEJ,cAAc,CAACI,YAAY;QACzCC,UAAU,EAAEL,cAAc,CAACK,UAAU,IAAE,MAAM;QAC7CC,IAAI,EAAEN,cAAc,CAACM,IAAI,IAAI,QAAQ;QACrCC,UAAU,EAAEP,cAAc,CAACO,UAAU,IAAI,QAAQ;QACjDC,QAAQ,EAAER,cAAc,CAACS,SAAS,CAACC,GAAG,CAAEC,QAAQ,KAAM;UACpDA,QAAQ,EAAEA,QAAQ,CAACA,QAAQ;UAC3BC,aAAa,EAAED,QAAQ,CAACC,aAAa,IAAI,IAAI;UAAG;UAChDC,OAAO,EAAEF,QAAQ,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,KAAM;YACzCC,IAAI,EAAED,MAAM,CAACC,IAAI;YACjBC,KAAK,EAAEF,MAAM,CAACE;UAChB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QACHf,SAAS,EAAEA,SAAS,CAAG;MACzB,CAAC;;MAED;MACA,MAAMO,QAAQ,GAAG,MAAMtB,KAAK,CAAC+B,IAAI,CAACf,OAAO,EAAEC,WAAW,EAAE;QACtDe,OAAO,EAAE;UACP,eAAe,EAAE,UAAUrB,YAAY,EAAE;UACzC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFF,UAAU,CAAC,IAAI,CAAC;MAChBJ,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOiB,QAAQ,CAACW,IAAI,CAAC,CAAE;IACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ3B,QAAQ,CAAC,oDAAoD,CAAC;MAC9DF,UAAU,CAAC,KAAK,CAAC;MACjB,MAAM6B,GAAG,CAAC,CAAE;IACd;EACF,CAAC;EAED,OAAO;IACLrB,gBAAgB;IAChBT,OAAO;IACPE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CAvDID,mBAAmB;EAAA,QAIFD,OAAO;AAAA;AAqD9B,eAAeC,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}